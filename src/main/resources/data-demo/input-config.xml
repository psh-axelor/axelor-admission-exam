<?xml version="1.0"?>
<xml-inputs xmlns="http://axelor.com/xml/ns/data-import"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://axelor.com/xml/ns/data-import http://axelor.com/xml/ns/data-import/data-import_5.3.xsd">

  <input file="perms.xml" root="permissions">
    <bind node="permission" type="com.axelor.auth.db.Permission" search="self.name = :name" update="false">
      <bind node="@name" to="name" />
      <bind node="@object" to="object" />
      <bind node="can/@create" to="canCreate" />
      <bind node="can/@read" to="canRead" />
      <bind node="can/@write" to="canWrite" />
      <bind node="can/@remove" to="canRemove" />
      <bind node="can/@export" to="canExport" />
      <bind node="domain/text()" to="condition"/>
      <bind node="domain-params/text()" to="conditionParams"/>
    </bind>
  </input>

  <input file="users.xml" root="users">
    <bind node="group" type="com.axelor.auth.db.Group" search="self.code = :code" update="true">
      <bind node="@code" to="code" />
      <bind node="@name" to="name" />
      <bind node="permissions/permission" to="permissions" search="self.name = :name">
        <bind node="@name" to="name" />
      </bind>
      <bind node="menus/menu" to="menus" search="self.name = :name">
        <bind node="@name" to="name" />
      </bind>
    </bind>
    <bind node="user" type="com.axelor.auth.db.User" search="self.code = :code" update="true" call="com.axelor.auth.AuthService:encrypt">
      <bind node="@group" to="group" search="self.code = :group"/>
      <bind node="@code" to="code" />
      <bind node="name" to="name" />
      <bind node="password" to="password" />
    </bind>
  </input>

  <input file="contacts.xml" root="address-book">
    <bind node="title" type="com.axelor.contact.db.Title" search="self.code = :code">
      <bind node="@code" to="code" />
      <bind node="@name" to="name" />
    </bind>
    <bind node="country" type="com.axelor.contact.db.Country" search="self.code = :code">
      <bind node="@code" to="code" />
      <bind node="@name" to="name" />
    </bind>
    <bind node="company" type="com.axelor.contact.db.Company" search="self.code = :code">
      <bind node="@code" to="code" />
      <bind node="@name" to="name" />
      <bind to="parent" search="self.code = :parent" />
    </bind>
    <bind node="circle" type="com.axelor.contact.db.Circle" search="self.code = :code">
      <bind node="@code" to="code" />
      <bind node="@name" to="name" />
    </bind>
    <bind node="contact" type="com.axelor.contact.db.Contact" search="self.emails[].email = :_email">
      <bind node="@title" to="title" search="self.code = :title" />
      <bind node="first-name" to="firstName" />
      <bind node="last-name" to="lastName" />
      <bind node="email" to="_email" /> <!-- context variable -->
      <bind node="email" to="emails">
        <bind to="primary" eval="true" />
        <bind node="text()" to="email" />
      </bind>
      <bind node="phone" to="phones">
        <bind to="primary" eval="true" />
        <bind to="phoneType" eval="'Mobile'" />
        <bind node="text()" to="phone" />
      </bind>
      <bind node="addresses/address" to="addresses">
        <bind node="street1" to="street" />
        <bind node="street2" to="area" />
        <bind node="city" to="city" />
        <bind to="country_code" node="country"/>
        <bind to="country" search="self.code = :country_code"/>
      </bind>
    </bind>
  </input>

  <input file="sale-orders.xml" root="sale-orders">

    <bind node="sequence" type="com.axelor.meta.db.MetaSequence" search="self.name = :name" update="false">
      <bind node="@name" to="name" />
      <bind node="@padding" to="padding" />
      <bind node="@prefix" to="prefix" />
    </bind>

    <bind node="tax" type="com.axelor.sale.db.Tax" search="self.code = :code">
      <bind node="@code" to="code" />
      <bind node="@name" to="name" />
      <bind to="rate" node="text()"/>
    </bind>

    <bind node="category" type="com.axelor.sale.db.ProductCategory" search="self.code = :code">
      <bind node="@code" to="code" />
      <bind node="@name" to="name" />
    </bind>

    <bind node="product" type="com.axelor.sale.db.Product" search="self.code = :code">
      <bind node="@code" to="code" />
      <bind node="@name" to="name" />
      <bind node="@color" to="color" />
      <bind node="@category" to="category" search="self.code = :category"/>
    </bind>

    <bind node="custom-fields/field" type="com.axelor.meta.db.MetaJsonField"
      search="self.name = :name AND self.model = :model AND self.modelField = :modelField">
      <bind node="../@for" to="model" />
      <bind node="../@on" to="modelField" />
      <bind node="@name" to="name" />
      <bind node="@type" to="type" eval="type?:'string'" />
      <bind node="@target" to="targetModel" />
      <bind node="@selection" to="selection" />
      <bind node="@widget" to="widget" />
    </bind>

    <bind node="sale-order" type="com.axelor.sale.db.Order" search="self.customer.emails[].email = :_email" update="false" call="com.axelor.demo.Validators:validateSaleOrder">
       <bind node="some" to="notes"/>

      <!-- transform boolean value into 'true' or 'false' -->
      <bind node="@confirmed" to="confirmed" adapter="Boolean"/>

      <!-- dummy binding -->
      <bind node="@date" to="_date" adapter="LocalDate"/>

      <!-- default value provided with eval expression -->
      <bind to="_date" eval="java.time.LocalDate.now()" if="!_date" />

      <bind to="orderDate" eval="_date" />
      <bind to="confirmDate" eval="_date" if="confirmed"/>
      <bind to="status" eval="'DRAFT'" if="!confirmed"/>
      <bind to="status" eval="'OPEN'" if="confirmed"/>

      <!-- put email in the context -->
      <bind node="customer/email" to="_email"/>

      <!-- IF email NOT EMPTY -->
      <bind node="customer" to="customer" search="self.emails[].email = :_email" if="_email" update="false">
        <bind node="firstName" to="firstName" />
        <bind node="lastName" to="lastName" />
        <bind node="email" to="emails">
          <bind node="text()" to="email" />
        </bind>
        <bind node="phone" to="phones">
          <bind to="primary" eval="true" />
          <bind to="phoneType" eval="'Mobile'" />
          <bind node="text()" to="phone" />
        </bind>
      </bind>
      <!-- ELSE -->
      <bind node="customer" to="customer" if="!_email">
        <bind node="firstName" to="firstName" />
        <bind node="lastName" to="lastName" />
        <bind to="emails">
          <bind to="email" eval='"${firstName}.${lastName}@gmail.com".toLowerCase()' />
        </bind>
      </bind>
      <!-- END IF -->

      <bind node="items/item" to="items">
        <bind node="@quantity" to="quantity" />
        <bind node="@price" to="price" />
        <bind node="@product" to="product" search="self.code = :product"/>
        <bind node="taxes/tax" to="taxes" search="self.code = :code">
          <bind node="@name" to="name" />
          <bind node="@code" to="code" />
          <bind node="text()" to="rate" />
        </bind>
      </bind>
    </bind>
  </input>

  <input file="jobs.xml" root="scheduled-jobs">
    <bind node="scheduled-job" type="com.axelor.meta.db.MetaSchedule" search="self.name = :name">
      <bind node="@active" to="active" />
      <bind node="@name" to="name" />
      <bind node="@description" to="description" />
      <bind node="@job" to="job" />
      <bind node="@cron" to="cron" />
      <bind node="param" to="params">
        <bind node="@name" to="name"/>
        <bind node="text()" to="value"/>
      </bind>
    </bind>
  </input>

  <input file="projects.xml" root="projects">
    <bind node="project" type="com.axelor.project.db.Project">
        <bind to="_base" eval="java.time.LocalDate.of(2014, 11, 11)" />
        <bind to="_date" eval="java.time.LocalDate.now()" />
      <bind node="@name" to="name"/>
      <bind node="@priority" to="priority"/>
      <bind node="description" to="description"/>
      <bind node="members/member" to="members" search="self.code = :code">
        <bind node="text()" to="code"/>
      </bind>
      <bind node="tasks/task" to="tasks">
        <bind node="@name" to="name"/>
          <bind node="@priority" to="priority"/>
            <bind node="@state" to="state"/>
          <bind node="@user" to="user" search="self.code = :user" update="true"/>
          <bind node="@createDate" to="createDate" adapter="LocalDateTime" eval="createDate?.plus(_base.until(_date))"/>
          <bind node="@startDate" to="startDate" adapter="LocalDateTime" eval="startDate?.plus(_base.until(_date))"/>
          <bind node="@endDate" to="endDate" adapter="LocalDateTime" eval="endDate?.plus(_base.until(_date))"/>
            <bind node="@plannedStartDate" to="plannedStartDate" adapter="LocalDateTime" eval="plannedStartDate?.plus(_base.until(_date))"/>
            <bind node="@plannedDuration" to="plannedDuration"/>
            <bind node="@parentTask" to="parentTask" search="self.name = :parentTask" update="true"/>
          <bind node="works/work" to="workItems">
            <bind node="@date" to="date" adapter="LocalDate" eval="date?.plus(_base.until(_date))"/>
            <bind node="@hours" to="hours" adapter="LocalTime"/>
            <bind node="text()" to="name"/>
          </bind>
           <bind node="finishToStartTaskSet/task" to="finishToStartTaskSet" search="self.name = :name" update="true">
              <bind node="text()" to="name"/>
           </bind>
           <bind node="startToStartTaskSet/task" to="startToStartTaskSet" search="self.name = :name" update="true">
              <bind node="text()" to="name"/>
           </bind>
      </bind>
    </bind>
  </input>

</xml-inputs>
